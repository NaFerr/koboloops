% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standard_operations.R
\name{affect_loop_to_parent}
\alias{affect_loop_to_parent}
\title{Add rows of the parent dataframe}
\usage{
affect_loop_to_parent(loop, parent, aggregate.function, variable.to.add,
  uuid.name.loop = NULL, uuid.name.parent = NULL)
}
\arguments{
\item{loop}{a dataframe containing the loops}

\item{parent}{a dataframe containing the parent informations}

\item{aggregate.function}{function specify by the user to aggregate the variable specified in variable.to.add. This function should take a vector as a parameter and return a single output.}

\item{variable.to.add}{a name character vector. This vector contains the exact variable(s) name(s) of the loop dataframe that the user wants to aggregate.
If there are multiple variables, the variables should be aggregate with the same function. The names of the variables if specified are going to be the name of the parent column.}

\item{uuid.name.loop}{optional: a string that specify the name of the loop column containing the uuids. If not specify, searches for column containing uuid string.}

\item{uuid.name.parent}{optional: a string that specify the name of the parent column containing the uuids. If not specify, searches for column containing uuid string.}
}
\value{
the parent dataframe to which column(s) has been added. The column(s) contains for each parent the result of the aggregation on the loop rows that correspond to the same parent.
}
\description{
Add rows of the parent dataframe
}
\details{
Add to the parent dataframe, column(s) that is(are) the result of the aggregation made on the loop dataframe. This aggregation is defined by the function aggregate.function.
}
\examples{
variable.to.add = c(sum_of_child_age="age_child")
parent <- data.frame(uuid=1:10, age_parent=sample(10,30,60),gender=sample(c("F","M"),10,replace = T) )
child <- data.frame (parent_uuid=sample(1:10,20,replace = T), age_child=sample(20,1,18)  gender=sample(c("F","M"),20,replace = T))
family <- affect_loop_to_parent(child, parent,aggregate.function = sum , variable.to.add)
}
